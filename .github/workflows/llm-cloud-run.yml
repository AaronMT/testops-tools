name: Gemini-LLM GCS Artifact Test

on:
  workflow_dispatch:
    inputs:
      use_prod_service_url:
        description: "Call the Cloud Run service after downloading artifacts"
        required: false
        type: boolean
        default: false

permissions:
  contents: read

env:
  GCP_PROJECT_ID: moz-testops-tools 
  SERVICE_URL: https://llm-tool-620861480696.us-central1.run.app
  CRASH_URI: gs://testops-llm-artifacts/crashes/minidumps/examples/crash_example.txt
  ANR_URI:   gs://testops-llm-artifacts/anr/examples/anr_example.txt
  LOCAL_ARTIFACT_DIR: artifacts

jobs:
  manual-run:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud (JSON key)
        uses: google-github-actions/auth@v3
        with:
          credentials_json: ${{ secrets.GCP_SA_VERTEX_AI }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}

      - name: Set gcloud project (quiet)
        run: |
          gcloud --quiet config set project "$GCP_PROJECT_ID"

      - name: Download artifacts from GCS
        run: |
          mkdir -p "${LOCAL_ARTIFACT_DIR}"
          gcloud storage cp "${CRASH_URI}" "${LOCAL_ARTIFACT_DIR}/crash_example.txt"
          gcloud storage cp "${ANR_URI}"   "${LOCAL_ARTIFACT_DIR}/anr_example.txt"
          echo "Downloaded files:"
          ls -la "${LOCAL_ARTIFACT_DIR}"

      - name: (Optional) POST artifacts as JSON to Cloud Run
        if: ${{ inputs.use_prod_service_url == true }}
        run: |
          set -euo pipefail

          CRASH_FILE="${LOCAL_ARTIFACT_DIR}/crash_example.txt"
          ANR_FILE="${LOCAL_ARTIFACT_DIR}/anr_example.txt"

          TOKEN="$(gcloud auth print-identity-token --audiences="${SERVICE_URL}")"

          # Create payload.json without putting large content in argv
          jq -n \
            --arg prompt "Analyze these artifacts." \
            --rawfile crash "$CRASH_FILE" \
            --rawfile anr "$ANR_FILE" \
            '{prompt: $prompt, content: ("Crash:\n"+$crash+"\n\nANR:\n"+$anr)}' \
            > payload.json

          # Post the JSON file
          curl -i -X POST \
            -H "Authorization: Bearer ${TOKEN}" \
            -H "Content-Type: application/json" \
            --data-binary @payload.json \
            "${SERVICE_URL}/"
